
name: YamDB Django-app
on: push

env:
  IMAGE_NAME: yamdb_final

jobs:
  tests:
    name: Тестрование кода.
    runs-on: ubuntu-latest
    steps:
      - name: Клонирование репозитория.
        uses: actions/checkout@v3
      
      # - name: Развёртывание окружения Python.
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: 3.7

      # - name: Установка необходимых зависимостей.
      #   run: | 
      #     python -m pip install --upgrade pip 
      #     pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
      #     pip install -r ./api_yamdb/requirements.txt  

      # - name: Запуск тестов flake8
      #   run: python -m flake8

      # - name: Запуск тестов Pytest
      #   run: pytest tests

  build_and_push_to_docker_hub:
    name: Загрузка docker образа на DockerHub.
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Проверка доступа репозитория DockerHub.
        uses: actions/checkout@v3 
      
      - name: Вызов сборщика контейнеров docker.
        uses: docker/setup-buildx-action@v2

      - name: Авторизации на DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Сборка и Загрузка образа на DockerHub.
        uses: docker/build-push-action@v4 
        with:
          file: ./api_yamdb/Dockerfile
          push: true
          tags: v1ncento/$IMAGE_NAME:latest
          # $(echo $GITHUB_SHA | head -c7)


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Выполнение удаленных ssh-команд для развертывания
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            sudo docker-compose stop
            sudo docker-compose rm web
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker-compose up -d
            
  send_message:
    name: ✉
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Уведомление в ТГ
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!